import json
import requests
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
import schedule
import time
from datetime import datetime

APPID = 'get api from openweathermap'
location = 'San Francisco, US'

def get_weather_data(location):
    url = f'https://api.openweathermap.org/data/2.5/weather?q={location}&APPID={APPID}'
    response = requests.get(url)
    response.raise_for_status()
    return response.json()

def send_weather_alert():
    weather_data = get_weather_data(location)
    current_weather = weather_data['weather'][0]['main']
    weather_description = weather_data['weather'][0]['description']

    if current_weather.lower() == 'haze' and 'haze' in weather_description.lower():
        username = 'Write your email address'
        password = 'write password of your account'
        smtp_server = 'smtp-mail.outlook.com'
        smtp_port = 587

        smtp_connection = smtplib.SMTP(smtp_server, smtp_port)
        smtp_connection.starttls()
        smtp_connection.login(username, password)

        from_email = username
        to_email = 'write recievers emaid address'
        subject = 'Frost Alert: Move Your Plants Indoors'
        message = 'The weather forecast indicates possible frost. Consider moving your plants indoors.'

        msg = MIMEMultipart()
        msg['From'] = from_email
        msg['To'] = to_email
        msg['Subject'] = subject
        msg.attach(MIMEText(message, 'plain'))

        smtp_connection.sendmail(from_email, to_email, msg.as_string())
        smtp_connection.quit()

def my_task():
    print("This task runs every Tuesday at 12:05 AM.")
    send_weather_alert()

schedule.every().tuesday.at("12:05").do(my_task)

while True:
    schedule.run_pending()
    time.sleep(1)
